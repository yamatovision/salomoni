import { 
  SupportTicket, 
  SupportTicketMessage, 
  SupportTicketStats,
  User,
  Organization,
  TicketStatus 
} from '../../../types';

// モックユーザーと組織情報を取得
const getUser = (userId: string): User | undefined => {
  const users: Record<string, User> = {
    'user-1': {
      id: 'user-1',
      email: 'admin@beauty-salon-a.com',
      name: '山田太郎',
      role: 'admin',
      organizationId: 'org-1',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    },
    'user-2': {
      id: 'user-2',
      email: 'stylist1@beauty-salon-a.com',
      name: '田中花子',
      role: 'stylist',
      organizationId: 'org-1',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    },
    'user-3': {
      id: 'user-3',
      email: 'admin@luxury-spa.com',
      name: '佐藤美香',
      role: 'admin',
      organizationId: 'org-2',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    },
    'user-4': {
      id: 'user-4',
      email: 'stylist@modern-beauty.com',
      name: '鈴木一郎',
      role: 'stylist',
      organizationId: 'org-3',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    }
  };
  return users[userId];
};

const getOrganization = (orgId: string): Organization | undefined => {
  const orgs: Record<string, Organization> = {
    'org-1': {
      id: 'org-1',
      name: 'ビューティーサロンA',
      adminUserId: 'user-1',
      planType: 'business',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    },
    'org-2': {
      id: 'org-2',
      name: 'ラグジュアリースパ',
      adminUserId: 'user-3',
      planType: 'pro',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    },
    'org-3': {
      id: 'org-3',
      name: 'モダンビューティー',
      adminUserId: 'user-4',
      planType: 'basic',
      isActive: true,
      createdAt: new Date('2024-01-01').toISOString(),
      updatedAt: new Date('2024-01-01').toISOString()
    }
  };
  return orgs[orgId];
};

// チケットのメッセージデータ
export const ticketMessages: Record<string, SupportTicketMessage[]> = {
  'ticket-1': [
    {
      id: 'msg-1-1',
      ticketId: 'ticket-1',
      senderId: 'user-1',
      message: 'ログインができなくなってしまいました。パスワードをリセットしても解決しません。',
      isStaff: false,
      createdAt: new Date('2024-05-22T09:00:00').toISOString()
    },
    {
      id: 'msg-1-2',
      ticketId: 'ticket-1',
      senderId: 'superadmin-1',
      message: 'お問い合わせありがとうございます。アカウント状況を確認いたしますので、登録メールアドレスを教えていただけますでしょうか。',
      isStaff: true,
      createdAt: new Date('2024-05-22T09:30:00').toISOString()
    },
    {
      id: 'msg-1-3',
      ticketId: 'ticket-1',
      senderId: 'user-1',
      message: 'admin@beauty-salon-a.com です。よろしくお願いします。',
      isStaff: false,
      createdAt: new Date('2024-05-22T10:00:00').toISOString()
    }
  ],
  'ticket-2': [
    {
      id: 'msg-2-1',
      ticketId: 'ticket-2',
      senderId: 'user-2',
      message: '顧客データをCSVでエクスポートしたいのですが、どうすればよいでしょうか？',
      isStaff: false,
      createdAt: new Date('2024-05-23T14:00:00').toISOString()
    }
  ],
  'ticket-3': [
    {
      id: 'msg-3-1',
      ticketId: 'ticket-3',
      senderId: 'user-3',
      message: '現在のベーシックプランからプロプランにアップグレードしたいです。手続きを教えてください。',
      isStaff: false,
      createdAt: new Date('2024-05-21T11:00:00').toISOString()
    },
    {
      id: 'msg-3-2',
      ticketId: 'ticket-3',
      senderId: 'superadmin-1',
      message: 'プランアップグレードのご検討ありがとうございます。設定画面の「プラン変更」から手続きできます。ご不明な点がございましたらお知らせください。',
      isStaff: true,
      createdAt: new Date('2024-05-21T11:30:00').toISOString()
    },
    {
      id: 'msg-3-3',
      ticketId: 'ticket-3',
      senderId: 'user-3',
      message: 'ありがとうございます。無事にアップグレードできました。',
      isStaff: false,
      createdAt: new Date('2024-05-21T12:00:00').toISOString()
    },
    {
      id: 'msg-3-4',
      ticketId: 'ticket-3',
      senderId: 'superadmin-1',
      message: 'アップグレードが完了したとのこと、安心いたしました。今後ともよろしくお願いいたします。',
      isStaff: true,
      createdAt: new Date('2024-05-21T13:00:00').toISOString()
    }
  ],
  'ticket-4': [
    {
      id: 'msg-4-1',
      ticketId: 'ticket-4',
      senderId: 'user-4',
      message: 'アプリが急に重くなってしまいました。特に顧客一覧を開くときに時間がかかります。',
      isStaff: false,
      createdAt: new Date('2024-05-23T16:00:00').toISOString()
    },
    {
      id: 'msg-4-2',
      ticketId: 'ticket-4',
      senderId: 'superadmin-1',
      message: '動作が重いとのこと、ご不便をおかけして申し訳ございません。現在システムの状況を確認しております。',
      isStaff: true,
      createdAt: new Date('2024-05-23T16:30:00').toISOString()
    }
  ],
  'ticket-5': [
    {
      id: 'msg-5-1',
      ticketId: 'ticket-5',
      senderId: 'user-1',
      message: '四柱推命の結果がたまに表示されないことがあります。再読み込みすると表示されますが、改善していただけますか？',
      isStaff: false,
      createdAt: new Date('2024-05-20T10:00:00').toISOString()
    },
    {
      id: 'msg-5-1',
      ticketId: 'ticket-5',
      senderId: 'superadmin-1',
      message: '不具合のご報告ありがとうございます。開発チームで調査し、次回のアップデートで改善予定です。',
      isStaff: true,
      createdAt: new Date('2024-05-20T14:00:00').toISOString()
    }
  ],
  'ticket-6': [
    {
      id: 'msg-6-1',
      ticketId: 'ticket-6',
      senderId: 'user-2',
      message: '新しいスタイリストを追加したいのですが、招待メールが届きません。',
      isStaff: false,
      createdAt: new Date('2024-05-24T08:00:00').toISOString()
    }
  ],
  'ticket-7': [
    {
      id: 'msg-7-1',
      ticketId: 'ticket-7',
      senderId: 'user-3',
      message: '請求書の宛名を変更したいです。どこから手続きできますか？',
      isStaff: false,
      createdAt: new Date('2024-05-19T15:00:00').toISOString()
    },
    {
      id: 'msg-7-2',
      ticketId: 'ticket-7',
      senderId: 'superadmin-1',
      message: '請求書設定は「組織設定」→「請求情報」から変更できます。次回の請求から反映されます。',
      isStaff: true,
      createdAt: new Date('2024-05-19T16:00:00').toISOString()
    },
    {
      id: 'msg-7-3',
      ticketId: 'ticket-7',
      senderId: 'user-3',
      message: '変更できました。ありがとうございました。',
      isStaff: false,
      createdAt: new Date('2024-05-19T17:00:00').toISOString()
    }
  ],
  'ticket-8': [
    {
      id: 'msg-8-1',
      ticketId: 'ticket-8',
      senderId: 'user-4',
      message: '予約管理機能があれば便利だと思うのですが、今後実装予定はありますか？',
      isStaff: false,
      createdAt: new Date('2024-05-24T10:00:00').toISOString()
    }
  ]
};

// サポートチケットのモックデータ
export const mockSupportTickets: SupportTicket[] = [
  {
    id: 'ticket-1',
    title: 'ログインできない',
    description: 'ログインができなくなってしまいました。パスワードをリセットしても解決しません。',
    status: TicketStatus.IN_PROGRESS,
    priority: 'urgent',
    category: 'technical',
    userId: 'user-1',
    organizationId: 'org-1',
    assignedTo: 'superadmin-1',
    messages: ticketMessages['ticket-1'],
    createdAt: new Date('2024-05-22T09:00:00').toISOString(),
    updatedAt: new Date('2024-05-22T10:00:00').toISOString(),
    user: getUser('user-1'),
    organization: getOrganization('org-1'),
    _isMockData: true
  },
  {
    id: 'ticket-2',
    title: 'データエクスポート方法について',
    description: '顧客データをCSVでエクスポートしたいのですが、どうすればよいでしょうか？',
    status: TicketStatus.PENDING,
    priority: 'medium',
    category: 'how_to',
    userId: 'user-2',
    organizationId: 'org-1',
    messages: ticketMessages['ticket-2'],
    createdAt: new Date('2024-05-23T14:00:00').toISOString(),
    updatedAt: new Date('2024-05-23T14:00:00').toISOString(),
    user: getUser('user-2'),
    organization: getOrganization('org-1'),
    _isMockData: true
  },
  {
    id: 'ticket-3',
    title: 'プランアップグレード希望',
    description: '現在のベーシックプランからプロプランにアップグレードしたいです。',
    status: TicketStatus.RESOLVED,
    priority: 'low',
    category: 'billing',
    userId: 'user-3',
    organizationId: 'org-2',
    assignedTo: 'superadmin-1',
    messages: ticketMessages['ticket-3'],
    createdAt: new Date('2024-05-21T11:00:00').toISOString(),
    updatedAt: new Date('2024-05-21T13:00:00').toISOString(),
    resolvedAt: new Date('2024-05-21T13:00:00').toISOString(),
    user: getUser('user-3'),
    organization: getOrganization('org-2'),
    _isMockData: true
  },
  {
    id: 'ticket-4',
    title: 'アプリの動作が重い',
    description: 'アプリが急に重くなってしまいました。特に顧客一覧を開くときに時間がかかります。',
    status: TicketStatus.IN_PROGRESS,
    priority: 'high',
    category: 'technical',
    userId: 'user-4',
    organizationId: 'org-3',
    assignedTo: 'superadmin-1',
    messages: ticketMessages['ticket-4'],
    createdAt: new Date('2024-05-23T16:00:00').toISOString(),
    updatedAt: new Date('2024-05-23T16:30:00').toISOString(),
    user: getUser('user-4'),
    organization: getOrganization('org-3'),
    _isMockData: true
  },
  {
    id: 'ticket-5',
    title: '四柱推命の結果が表示されない',
    description: '四柱推命の結果がたまに表示されないことがあります。',
    status: TicketStatus.RESOLVED,
    priority: 'medium',
    category: 'bug',
    userId: 'user-1',
    organizationId: 'org-1',
    assignedTo: 'superadmin-1',
    messages: ticketMessages['ticket-5'],
    createdAt: new Date('2024-05-20T10:00:00').toISOString(),
    updatedAt: new Date('2024-05-20T14:00:00').toISOString(),
    resolvedAt: new Date('2024-05-20T14:00:00').toISOString(),
    user: getUser('user-1'),
    organization: getOrganization('org-1'),
    _isMockData: true
  },
  {
    id: 'ticket-6',
    title: '招待メールが届かない',
    description: '新しいスタイリストを追加したいのですが、招待メールが届きません。',
    status: TicketStatus.PENDING,
    priority: 'high',
    category: 'technical',
    userId: 'user-2',
    organizationId: 'org-1',
    messages: ticketMessages['ticket-6'],
    createdAt: new Date('2024-05-24T08:00:00').toISOString(),
    updatedAt: new Date('2024-05-24T08:00:00').toISOString(),
    user: getUser('user-2'),
    organization: getOrganization('org-1'),
    _isMockData: true
  },
  {
    id: 'ticket-7',
    title: '請求書の宛名変更',
    description: '請求書の宛名を変更したいです。どこから手続きできますか？',
    status: TicketStatus.RESOLVED,
    priority: 'low',
    category: 'billing',
    userId: 'user-3',
    organizationId: 'org-2',
    assignedTo: 'superadmin-1',
    messages: ticketMessages['ticket-7'],
    createdAt: new Date('2024-05-19T15:00:00').toISOString(),
    updatedAt: new Date('2024-05-19T17:00:00').toISOString(),
    resolvedAt: new Date('2024-05-19T17:00:00').toISOString(),
    user: getUser('user-3'),
    organization: getOrganization('org-2'),
    _isMockData: true
  },
  {
    id: 'ticket-8',
    title: '機能要望：予約管理',
    description: '予約管理機能があれば便利だと思うのですが、今後実装予定はありますか？',
    status: TicketStatus.PENDING,
    priority: 'low',
    category: 'feature_request',
    userId: 'user-4',
    organizationId: 'org-3',
    messages: ticketMessages['ticket-8'],
    createdAt: new Date('2024-05-24T10:00:00').toISOString(),
    updatedAt: new Date('2024-05-24T10:00:00').toISOString(),
    user: getUser('user-4'),
    organization: getOrganization('org-3'),
    _isMockData: true
  }
];

// 統計情報の生成
export const mockSupportTicketStats: SupportTicketStats = {
  total: mockSupportTickets.length,
  open: mockSupportTickets.filter(t => t.status === 'open').length,
  inProgress: mockSupportTickets.filter(t => t.status === 'in_progress').length,
  resolved: mockSupportTickets.filter(t => t.status === 'resolved').length,
  avgResponseTime: 45, // 分
  avgResolutionTime: 180, // 分
  _isMockData: true
};